name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Запуск пайплайна при пуше в ветку main
  pull_request:
    branches:
      - main

jobs:
  # Этап CI
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      # Шаг для установки Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      # Установка зависимостей для фронтенда
      - name: Install dependencies for frontend
        run: |
          cd frontend
          npm install

      # Статический анализ фронтенда с помощью ESLint
      - name: Lint frontend
        run: |
          cd frontend
          npx eslint .

      # Установка зависимостей для бэкенда
      - name: Install dependencies for backend
        run: |
          cd backend
          npm install

      # Статический анализ бэкенда с помощью ESLint
      - name: Lint backend
        run: |
          cd backend
          npx eslint .

      # Запуск тестов (если они есть)
      - name: Run tests
        run: |
          cd frontend
          npm run test

  # Этап CD
  cd:
    runs-on: ubuntu-latest
    needs: ci  # Этап CD зависит от успешного выполнения CI

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Сборка и пуш Docker образов для фронтенда
      - name: Build and push frontend Docker image
        run: |
          docker build -t my-frontend ./frontend
          docker tag my-frontend myusername/my-frontend:latest
          docker push myusername/my-frontend:latest

      # Сборка и пуш Docker образов для бэкенда
      - name: Build and push backend Docker image
        run: |
          docker build -t my-backend ./backend
          docker tag my-backend myusername/my-backend:latest
          docker push myusername/my-backend:latest

      # Деплой на сервер или куда-либо (пример деплоя)
      - name: Deploy to production
        run: |
          echo "Deploying Docker images to production server or other services..."
          # Пример команды для деплоя на сервер:
          # ssh user@production-server "docker pull myusername/my-frontend:latest && docker pull myusername/my-backend:latest && docker-compose up -d"
